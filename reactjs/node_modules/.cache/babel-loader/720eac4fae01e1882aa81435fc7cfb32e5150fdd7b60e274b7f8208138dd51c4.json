{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchRegister = createAsyncThunk('register', async data => {\n  console.log(data);\n  try {\n    const res = await axios.post(\"http://localhost:5000/api/v1/auth/register\", data);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n});\nconst initialState = {\n  userRegister: [],\n  isloading: false,\n  isError: false\n};\nexport const registerSlice = createSlice({\n  name: 'register',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchRegister.pending, (state, action) => {\n      state.isloading = true;\n      state.isError = false;\n    });\n    builder.addCase(fetchRegister.fulfilled, (state, action) => {\n      state.userRegister = action.payload.data;\n      state.isloading = false;\n      state.isError = false;\n    });\n    builder.addCase(fetchRegister.rejected, (state, action) => {\n      // Add user to the state array\n      state.isloading = false;\n      state.isError = true;\n    });\n  }\n});\nexport default registerSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchRegister","data","console","log","res","post","error","initialState","userRegister","isloading","isError","registerSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","reducer"],"sources":["C:/Users/USER/Desktop/training/reactjs/src/redux/slices/registerSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\nexport const fetchRegister = createAsyncThunk(\r\n    'register',\r\n    async (data) => {\r\n        console.log(data);\r\n        try {\r\n            const res = await axios.post(\"http://localhost:5000/api/v1/auth/register\", data)\r\n            return res\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n)\r\n\r\n\r\nconst initialState = {\r\n    userRegister: [],\r\n    isloading: false,\r\n    isError: false,\r\n}\r\n\r\nexport const registerSlice = createSlice({\r\n    name: 'register',\r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchRegister.pending, (state, action) => {\r\n            state.isloading = true\r\n            state.isError = false\r\n        })\r\n        builder.addCase(fetchRegister.fulfilled, (state, action) => {\r\n            state.userRegister = action.payload.data\r\n            state.isloading = false\r\n            state.isError = false\r\n        })\r\n        builder.addCase(fetchRegister.rejected, (state, action) => {\r\n            // Add user to the state array\r\n            state.isloading = false\r\n            state.isError = true\r\n        })\r\n    },\r\n})\r\n\r\nexport default registerSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CACzC,UAAU,EACV,MAAOG,IAAI,IAAK;EACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,IAAI;IACA,MAAMG,GAAG,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,4CAA4C,EAAEJ,IAAI,CAAC;IAChF,OAAOG,GAAG;EACd,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACtB;AACJ,CAAC,CACJ;AAGD,MAAMC,YAAY,GAAG;EACjBC,YAAY,EAAE,EAAE;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGd,WAAW,CAAC;EACrCe,IAAI,EAAE,UAAU;EAChBL,YAAY;EACZM,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAAChB,aAAa,CAACiB,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAACT,SAAS,GAAG,IAAI;MACtBS,KAAK,CAACR,OAAO,GAAG,KAAK;IACzB,CAAC,CAAC;IACFK,OAAO,CAACC,OAAO,CAAChB,aAAa,CAACoB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACxDD,KAAK,CAACV,YAAY,GAAGW,MAAM,CAACE,OAAO,CAACpB,IAAI;MACxCiB,KAAK,CAACT,SAAS,GAAG,KAAK;MACvBS,KAAK,CAACR,OAAO,GAAG,KAAK;IACzB,CAAC,CAAC;IACFK,OAAO,CAACC,OAAO,CAAChB,aAAa,CAACsB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACvD;MACAD,KAAK,CAACT,SAAS,GAAG,KAAK;MACvBS,KAAK,CAACR,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAeC,aAAa,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}