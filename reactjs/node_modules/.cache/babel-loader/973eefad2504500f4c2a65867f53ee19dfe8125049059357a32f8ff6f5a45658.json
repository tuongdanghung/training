{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchAuth = createAsyncThunk('auth', async (email, password) => {\n  console.log(\">>>\", email, password);\n  // const response = await axios.post('http://localhost:5000/api/v1/login')\n  // return response.data\n});\n\nconst initialState = {\n  listUsers: [],\n  isloading: false,\n  isError: false\n};\nexport const authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchAuth.pending, (state, action) => {\n      state.isloading = true;\n      state.isError = false;\n    });\n    builder.addCase(fetchAuth.fulfilled, (state, action) => {\n      state.listUsers = action.payload;\n      state.isloading = false;\n      state.isError = false;\n    });\n    builder.addCase(fetchAuth.rejected, (state, action) => {\n      // Add user to the state array\n      state.isloading = false;\n      state.isError = true;\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchAuth","email","password","console","log","initialState","listUsers","isloading","isError","authSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","reducer"],"sources":["C:/Users/USER/Desktop/training/reactjs/src/redux/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const fetchAuth = createAsyncThunk(\r\n    'auth',\r\n    async (email, password) => {\r\n        console.log(\">>>\", email, password);\r\n        // const response = await axios.post('http://localhost:5000/api/v1/login')\r\n        // return response.data\r\n    }\r\n)\r\n\r\n\r\nconst initialState = {\r\n    listUsers: [],\r\n    isloading: false,\r\n    isError: false,\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchAuth.pending, (state, action) => {\r\n            state.isloading = true\r\n            state.isError = false\r\n        })\r\n        builder.addCase(fetchAuth.fulfilled, (state, action) => {\r\n            state.listUsers = action.payload\r\n            state.isloading = false\r\n            state.isError = false\r\n        })\r\n        builder.addCase(fetchAuth.rejected, (state, action) => {\r\n            // Add user to the state array\r\n            state.isloading = false\r\n            state.isError = true\r\n        })\r\n    },\r\n})\r\n\r\nexport default authSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CACrC,MAAM,EACN,OAAOG,KAAK,EAAEC,QAAQ,KAAK;EACvBC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEH,KAAK,EAAEC,QAAQ,CAAC;EACnC;EACA;AACJ,CAAC,CACJ;;AAGD,MAAMG,YAAY,GAAG;EACjBC,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGZ,WAAW,CAAC;EACjCa,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACd,SAAS,CAACe,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACT,SAAS,GAAG,IAAI;MACtBS,KAAK,CAACR,OAAO,GAAG,KAAK;IACzB,CAAC,CAAC;IACFK,OAAO,CAACC,OAAO,CAACd,SAAS,CAACkB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACV,SAAS,GAAGW,MAAM,CAACE,OAAO;MAChCH,KAAK,CAACT,SAAS,GAAG,KAAK;MACvBS,KAAK,CAACR,OAAO,GAAG,KAAK;IACzB,CAAC,CAAC;IACFK,OAAO,CAACC,OAAO,CAACd,SAAS,CAACoB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACnD;MACAD,KAAK,CAACT,SAAS,GAAG,KAAK;MACvBS,KAAK,CAACR,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAeC,SAAS,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}